name: ðŸŒ• CMake Build Matrix

on: [push]

jobs:
  mybuild:
    name: ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    
    strategy:
      matrix:
        config:
          - {
              os: windows-latest,
              bin: 'src/Release/main_run.exe',
              cmakeConfig: '-A Win32 -T v142,host=x64',
              cmakeBuildConfig: '--config Release',
              prescript: 'chcp 65001',
              sudo: '  ',
            }
          - {
              os: ubuntu-latest,
              bin: './src/main_run',
              prescript: 'cat /proc/cpuinfo; export CXX=clang++',
              cmakeConfig: ' -D NODOOR32=1 ',
              cmakeBuildConfig: '',
              sudo: ' sudo ',
            }

          # - {
          #     os: macos-latest,
          #     bin: "./src/main_run",
          #     cmakeConfig: '',
          #     cmakeBuildConfig: '',
          #     sudo: ' ',
          #     prescript: "",
          #   }
    env:
      aversion: 3.8.8
      PYTHON_VERSION: 3.9
      NODE_VERSION: 'v15'

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}


      - name: Install deps
        if: matrix.config.os == 'windows-latest'
        run: choco install nasm


      - name: Build with Node.js ${{ env.NODE_VERSION }}
        shell: bash
        run: |
            bash ./build.sh  ${{ env.NODE_VERSION }} ${{ env.aversion }} --using_github_actions
            ls -al


      - name: BUILDING on Windows - call .bat files
        if: matrix.config.os == 'windows-latest'
        run: |
            ./build_python.bat ${{ env.aversion }}

      - name: Run on Windows - call .bat files
        shell: bash
        run:
            ./nodejs/out/Release/node --version

#      - name: Copy artifact
#        shell: bash
#        run: |
#          cd build;
#          mkdir -p deb/${{ matrix.config.os }};
#          cp ${{ matrix.config.bin }} deb/${{ matrix.config.os }}
#
#
#      - uses: actions/upload-artifact@v2
#        with:
#          name: python-lucene_${{ github.sha }}_amd64
#          path: build/deb
#
